[workspace.package]
version = "0.1.0"
edition = "2021"
description = "A Cardano blockchain node implementation"
license = "Apache-2.0"
authors = ["Amaru Maintainers <amaru@pragma.builders>"]
repository = "https://github.com/pragma-org/amaru"
homepage = "https://github.com/pragma-org/amaru"
documentation = "https://docs.rs/amaru"
rust-version = "1.88"                                    # ⚠️ Also change in .cargo/rust-toolchain.toml

[workspace]
members = ["crates/*", "simulation/*"]
default-members = ["crates/*"]
resolver = "2"

[workspace.dependencies]
acto = { version = "0.7.2", features = ["tokio"] }
anyhow = "1.0.95"
async-trait = "0.1.83"
async-compression = { version = "0.4.24", features = ["tokio", "gzip"] }
bech32 = "0.11.0"
clap = { version = "4.5.38", features = ["derive", "env"] }
reqwest = { version = "0.11.24", default-features = false, features = [
    "json",
    "stream",
    "rustls-tls",
] }
either = "1.15"
futures-util = "0.3.31"
gasket = { version = "0.8.0", features = [
    "derive",
] } # More recent versions have regression (e.g. https://github.com/construkts/gasket-rs/pull/34)
hex = "0.4.3"
indicatif = "0.17.9"
indoc = "2.0"
minicbor = "0.26.0" # Must match the version used by pallas
num = { version = "0.4.3", default-features = false, features = ["alloc"] }
opentelemetry = "0.29.1"
opentelemetry-otlp = { version = "0.29.0", features = [
    "grpc-tonic",
    "http-proto",
    "reqwest-blocking-client",
] }
opentelemetry_sdk = "0.29.0"
pallas-addresses = "1.0.0-alpha.2"
pallas-codec = "1.0.0-alpha.2" # When updating, double check that minicbor doesn't need to be updated too (see https://github.com/txpipe/pallas/blob/v1.0.0-alpha.2/pallas-codec/Cargo.toml#L22)
pallas-crypto = "1.0.0-alpha.2"
pallas-math = "1.0.0-alpha.2"
pallas-network = "1.0.0-alpha.2"
pallas-primitives = "1.0.0-alpha.2"
pallas-traverse = "1.0.0-alpha.2"
parking_lot = "0.12.3"
rayon = "1.10"
rocksdb = { version = "0.23.0", default-features = false, features = [
    "bindgen-runtime",
    "snappy",
    "multi-threaded-cf",
] }
serde = { version = "1.0", default-features = false }
serde_json = { version = "1.0.128", default-features = false }
sha3 = "0.10.8"
sysinfo = "0.35.1"
thiserror = "2.0.12"
tokio = { version = "1.45.0", features = ["sync"] }
tokio-util = "0.7.12"
tokio-stream = "0.1.17"
tracing = "0.1.40"
tracing-opentelemetry = "0.30.0"
tracing-subscriber = { version = "0.3.18", features = [
    "env-filter",
    "std",
    "json",
] }

amaru-consensus = { path = "crates/amaru-consensus" }
amaru-kernel = { path = "crates/amaru-kernel" }
amaru-ledger = { path = "crates/amaru-ledger" }
amaru-mempool = { path = "crates/amaru-mempool" }
amaru-ouroboros = { path = "crates/ouroboros" }
amaru-ouroboros-traits = { path = "crates/ouroboros-traits" }
amaru-stores = { path = "crates/amaru-stores" }
iter-borrow = { path = "crates/iter-borrow" }
pure-stage = { path = "crates/pure-stage" }
slot-arithmetic = { path = "crates/slot-arithmetic" }
tracing-json = { path = "crates/tracing-json" }

# The vrf crate has not been fully tested in production environments and still has several upstream issues that are open PRs but not merged yet.
vrf_dalek = { git = "https://github.com/txpipe/vrf", rev = "044b45a1a919ba9d9c2471fc5c4d441f13086676" }
kes-summed-ed25519 = { git = "https://github.com/txpipe/kes", rev = "f69fb357d46f6a18925543d785850059569d7e78" }

# dev-dependencies
ctor = "0.4.1"
tempfile = "3.20.0"
rand = "0.9.1"
proptest = { version = "1.5.0", default-features = false, features = ["alloc"] }
insta = "1.41.1"
criterion = "0.6.0"
test-case = "3.3.1"

# build-dependencies
built = "0.8.0"

[workspace.lints.rust]
rust-2018-idioms = "warn"
rust-2018-compatibility = "warn"
rust-2021-compatibility = "warn"
#rust-2024-compatibility = "warn"
nonstandard-style = { level = "deny" }
future-incompatible = { level = "deny" }

[workspace.lints.clippy]
# Enable clippy lints for all members
# * https://doc.rust-lang.org/clippy/lints.htwml


# Group lints

# pedantic = "warn"
# restriction = "warn"
# nursery = "warn"
# cargo = "warn"
# others are enabled by default, see table here: https://doc.rust-lang.org/clippy/

# Individual lints

# All lints are detailed here: https://rust-lang.github.io/rust-clippy/master/index.html
# allow-unwrap-in-tests = true
# unreachable = "warn"
expect_used = "warn"
panic = "warn"
todo = "warn"
unwrap_used = "warn"
wildcard_enum_match_arm = "warn"

# See https://doc.rust-lang.org/cargo/reference/profiles.html

[profile.dev]
opt-level = 2
debug = false

[profile.dev-debug]
# Restore default 'dev' profile (see https://doc.rust-lang.org/cargo/reference/profiles.html#dev)
inherits = "dev"
opt-level = 0
debug = true

[profile.release]
lto = true
codegen-units = 1
